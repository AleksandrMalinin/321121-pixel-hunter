{"version":3,"file":"header-view.js","sources":["../util.js","abstract-view.js","../constants.js","header-view.js"],"sourcesContent":["export const getElementFromTemplate = (markup) => {\n  let domElement = document.createElement(`div`);\n  domElement.innerHTML = markup;\n  return domElement;\n};\n\nexport const showErrorMessage = (message) => {\n  const template = document.createElement(`div`);\n  template.textContent = message;\n\n  const styles = [\n    `position: fixed`,\n    `top: 25%`,\n    `left: 50%`,\n    `z-index: 100`,\n    `width: 800px`,\n    `padding: 20px`,\n    `color: #fff`,\n    `text-align: center`,\n    `transform: translate(-50%, -50%)`,\n    `border-radius: 2px`,\n    `background-color: #DC143C`\n  ];\n\n  template.style.cssText = styles.join(`;`);\n  document.body.appendChild(template);\n};\n","import {getElementFromTemplate} from \"../util\";\n\nclass AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can not create example of AbstractView, only the new one class`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return getElementFromTemplate(this.template);\n  }\n\n  bind() {\n  }\n}\n\nexport default AbstractView;\n","const constants = {\n  MAX_ANSWERS_COUNT: 10,\n  MAX_WRONG_ANSWERS: 3,\n  CORRECT_ANSWER: 100,\n  ADDITIONAL_POINTS: 50,\n  LOWER_TIME_LIMIT: 10,\n  HIGHER_TIME_LIMIT: 20,\n  CHECKED_RADIO_COUNT: 2,\n  MIN_NAME_LENGTH: 2,\n  INITIAL_STATE: Object.freeze({\n    lives: 3,\n    time: 30,\n    win: false,\n    level: 0\n  }),\n  SERVER_URL: `https://es.dump.academy/pixel-hunter`,\n  MAX_RESULTS_NUMBER: 3,\n  LAST_SEC: 5,\n  PAUSE_TIME: 3000\n};\n\nexport default constants;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\n\nclass HeaderView extends AbstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n\n  get template() {\n    return `\n    <header class=\"header\">\n      <div class=\"header__back\">\n        <button class=\"back\">\n          <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n          <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n        </button>\n      </div>\n      <h1 class=\"game__timer\">${this.state.time}</h1>\n      <div class=\"game__lives\">\n        ${new Array(constants.INITIAL_STATE.lives - this.state.lives)\n      .fill(`<img src=\"img/heart__empty.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n        ${new Array(this.state.lives)\n      .fill(`<img src=\"img/heart__full.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n      </div>\n    </header>`;\n  }\n\n  bind() {\n    this.element.querySelector(`.back`).addEventListener(`click`, () => {\n      this.onButtonClick();\n      this.stopFlashing();\n    });\n\n    if (this.state.time <= constants.LAST_SEC) {\n      this.element.querySelector(`.game__timer`).classList.add(`flashing`);\n    }\n  }\n\n  onButtonClick() {\n  }\n\n  stopFlashing() {\n    this.element.querySelector(`.game__timer`).classList.remove(`flashing`);\n  }\n}\n\nexport default HeaderView;\n"],"names":["getElementFromTemplate","markup","domElement","document","createElement","innerHTML","AbstractView","new","target","Error","template","_element","render","bind","constants","Object","freeze","HeaderView","state","element","querySelector","addEventListener","onButtonClick","stopFlashing","time","LAST_SEC","classList","add","remove","Array","INITIAL_STATE","lives","fill","join"],"mappings":";;;AAAO,IAAMA,yBAAyB,SAAzBA,sBAAyB,CAACC,MAAD,EAAY;MAC5CC,aAAaC,SAASC,aAAT,OAAjB;aACWC,SAAX,GAAuBJ,MAAvB;SACOC,UAAP;CAHK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICEDI;0BACU;;;QACRC,IAAIC,MAAJ,KAAeF,YAAnB,EAAiC;YACzB,IAAIG,KAAJ,kEAAN;;;;;;6BAiBK;aACAT,uBAAuB,KAAKU,QAA5B,CAAP;;;;2BAGK;;;2BAjBQ;YACP,IAAID,KAAJ,wBAAN;;;;2BAGY;UACR,KAAKE,QAAT,EAAmB;eACV,KAAKA,QAAZ;;WAEGA,QAAL,GAAgB,KAAKC,MAAL,EAAhB;WACKC,IAAL,CAAU,KAAKF,QAAf;aACO,KAAKA,QAAZ;;;;;;ACnBJ,IAAMG,YAAY;qBACG,EADH;qBAEG,CAFH;kBAGA,GAHA;qBAIG,EAJH;oBAKE,EALF;qBAMG,EANH;uBAOK,CAPL;mBAQC,CARD;iBASDC,OAAOC,MAAP,CAAc;WACpB,CADoB;UAErB,EAFqB;SAGtB,KAHsB;WAIpB;GAJM,CATC;oDAAA;sBAgBI,CAhBJ;YAiBN,CAjBM;cAkBJ;CAlBd;;ICGMC;;;sBACQC,KAAZ,EAAmB;;;;;UAEZA,KAAL,GAAaA,KAAb;;;;;;2BAyBK;;;WACAC,OAAL,CAAaC,aAAb,UAAoCC,gBAApC,UAA8D,YAAM;eAC7DC,aAAL;eACKC,YAAL;OAFF;;UAKI,KAAKL,KAAL,CAAWM,IAAX,IAAmBV,UAAUW,QAAjC,EAA2C;aACpCN,OAAL,CAAaC,aAAb,iBAA2CM,SAA3C,CAAqDC,GAArD;;;;;oCAIY;;;mCAGD;WACRR,OAAL,CAAaC,aAAb,iBAA2CM,SAA3C,CAAqDE,MAArD;;;;2BApCa;qVASe,KAAKV,KAAL,CAAWM,IARvC,0DAUM,IAAIK,KAAJ,CAAUf,UAAUgB,aAAV,CAAwBC,KAAxB,GAAgC,KAAKb,KAAL,CAAWa,KAArD,EACHC,IADG,qGAEHC,IAFG,IAVN,kBAaM,IAAIJ,KAAJ,CAAU,KAAKX,KAAL,CAAWa,KAArB,EACHC,IADG,oGAEHC,IAFG,IAbN;;;;EARqB3B;;;;;;;;"}