{"version":3,"file":"many-results-view.js","sources":["../util.js","abstract-view.js","footer-view.js","../constants.js","statistic-view.js","../logic/game-statistic.js","game-results-view.js","greeting-view.js","rules-view.js","header-view.js","game-first-view.js","game-second-view.js","game-third-view.js","modal-view.js","../logic/game-screen.js","../logic/initial-game.js","../logic/game-model.js","../splash/splash-screen.js","../loader.js","../application.js","many-results-view.js"],"sourcesContent":["export const getElementFromTemplate = (markup) => {\n  let domElement = document.createElement(`div`);\n  domElement.innerHTML = markup;\n  return domElement;\n};\n\nexport const showErrorMessage = (message) => {\n  const template = document.createElement(`div`);\n  template.textContent = message;\n\n  const styles = [\n    `position: fixed`,\n    `top: 25%`,\n    `left: 50%`,\n    `z-index: 100`,\n    `width: 800px`,\n    `padding: 20px`,\n    `color: #fff`,\n    `text-align: center`,\n    `transform: translate(-50%, -50%)`,\n    `border-radius: 2px`,\n    `background-color: #DC143C`\n  ];\n\n  template.style.cssText = styles.join(`;`);\n  document.body.appendChild(template);\n};\n","import {getElementFromTemplate} from \"../util\";\n\nclass AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can not create example of AbstractView, only the new one class`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return getElementFromTemplate(this.template);\n  }\n\n  bind() {\n  }\n}\n\nexport default AbstractView;\n","import AbstractView from \"./abstract-view\";\n\nclass FooterView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <footer class=\"footer\">\n      <a href=\"https://htmlacademy.ru\" class=\"social-link social-link--academy\">HTML Academy</a>\n      <span class=\"footer__made-in\">Сделано в <a href=\"https://htmlacademy.ru\" class=\"footer__link\">HTML Academy</a> &copy; 2016</span>\n      <div class=\"footer__social-links\">\n        <a href=\"https://twitter.com/htmlacademy_ru\" class=\"social-link  social-link--tw\">Твиттер</a>\n        <a href=\"https://www.instagram.com/htmlacademy/\" class=\"social-link  social-link--ins\">Инстаграм</a>\n        <a href=\"https://www.facebook.com/htmlacademy\" class=\"social-link  social-link--fb\">Фэйсбук</a>\n        <a href=\"https://vk.com/htmlacademy\" class=\"social-link  social-link--vk\">Вконтакте</a>\n      </div>\n    </footer>`;\n  }\n}\n\n\nexport default FooterView;\n","const constants = {\n  MAX_ANSWERS_COUNT: 10,\n  MAX_WRONG_ANSWERS: 3,\n  CORRECT_ANSWER: 100,\n  ADDITIONAL_POINTS: 50,\n  LOWER_TIME_LIMIT: 10,\n  HIGHER_TIME_LIMIT: 20,\n  CHECKED_RADIO_COUNT: 2,\n  MIN_NAME_LENGTH: 2,\n  INITIAL_STATE: Object.freeze({\n    lives: 3,\n    time: 30,\n    win: false,\n    level: 0\n  }),\n  SERVER_URL: `https://es.dump.academy/pixel-hunter`,\n  MAX_RESULTS_NUMBER: 3,\n  LAST_SEC: 5,\n  PAUSE_TIME: 3000\n};\n\nexport default constants;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\n\nconst getAnswerType = (answer) => {\n  if (!answer.correct) {\n    return `wrong`;\n  }\n\n  if (answer.correct && answer.time < constants.LOWER_TIME_LIMIT) {\n    return `fast`;\n  }\n\n  if (answer.correct && answer.time > constants.HIGHER_TIME_LIMIT) {\n    return `slow`;\n  }\n\n  return `correct`;\n};\n\nclass StatisticView extends AbstractView {\n  constructor(answers) {\n    super();\n    this.answers = answers;\n    this.answersType = this.answers.map((answer) => getAnswerType(answer));\n  }\n\n  get template() {\n    return `\n    <div class=\"stats\">\n      <ul class=\"stats\">\n      ${this.answersType.map((answerType) => `<li class=\"stats__result stats__result--${answerType}\"></li>`)\n      .join(``)}\n      ${new Array(10 - this.answersType.length)\n      .fill(`<li class=\"stats__result stats__result--unknown\"></li>`)\n      .join(``)}\n      </ul>\n    </div>`;\n  }\n}\n\nexport default StatisticView;\n","import constants from \"../constants\";\n\nexport const getAnswersQuantity = (state) => {\n  const correctAnswers = state.answers.filter((answer) => {\n    return answer.correct;\n  });\n\n  const slowAnswers = state.answers.filter((answer) => {\n    return answer.time > constants.HIGHER_TIME_LIMIT && answer.correct;\n  });\n\n  const fastAnswers = state.answers.filter((answer) => {\n    return answer.time < constants.LOWER_TIME_LIMIT && answer.correct;\n  });\n\n  return {\n    correct: correctAnswers.length,\n    slow: slowAnswers.length,\n    fast: fastAnswers.length,\n    lives: state.lives\n  };\n};\n\nexport const countPoints = (answers) => {\n  return answers.correct * constants.CORRECT_ANSWER + answers.fast * constants.ADDITIONAL_POINTS + answers.slow * -constants.ADDITIONAL_POINTS + answers.lives * constants.ADDITIONAL_POINTS;\n};\n","import AbstractView from \"./abstract-view\";\nimport StatisticView from \"./statistic-view\";\nimport {countPoints, getAnswersQuantity} from \"../logic/game-statistic\";\nimport constants from \"../constants\";\n\nclass GameResultsView extends AbstractView {\n  constructor(state, index) {\n    super();\n    this.index = index;\n    this.state = state;\n    this.answers = this.state.answers;\n    this.win = this.state.win;\n    this.statsview = new StatisticView(this.answers).template;\n    this.answerResult = getAnswersQuantity(state);\n    this.totalResult = countPoints(this.answerResult);\n  }\n\n  get template() {\n    return `\n          <table class=\"result__table\">\n        <tr>\n          <td class=\"result__number\">${this.index}.</td>\n          <td colspan=\"2\">\n            ${this.statsview}\n          </td>\n          <td class=\"result__points\">×&nbsp;100</td>\n          <td class=\"result__total\">${this.answerResult.correct * constants.CORRECT_ANSWER}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за скорость:</td>\n          <td class=\"result__extra\">${this.answerResult.fast}&nbsp;<span class=\"stats__result stats__result--fast\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.fast * constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за жизни:</td>\n          <td class=\"result__extra\">${this.answerResult.lives}&nbsp;<span class=\"stats__result stats__result--alive\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.lives * constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Штраф за медлительность:</td>\n          <td class=\"result__extra\">${this.answerResult.slow}&nbsp;<span class=\"stats__result stats__result--slow\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.slow * -constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td colspan=\"5\" class=\"result__total  result__total--final\">${this.totalResult}</td>\n        </tr>\n      </table>`;\n  }\n}\n\nexport default GameResultsView;\n","import AbstractView from \"./abstract-view\";\nimport Application from \"../application\";\nimport FooterView from \"./footer-view\";\n\nclass GreetingView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <div class=\"greeting central--blur\">\n      <div class=\"greeting__logo\"><img src=\"img/logo_big.png\" width=\"201\" height=\"89\" alt=\"Pixel Hunter\"></div>\n      <h1 class=\"greeting__asterisk\">*</h1>\n      <div class=\"greeting__challenge\">\n        <h3>Лучшие художники-фотореалисты бросают&nbsp;тебе&nbsp;вызов!</h3>\n        <p>Правила игры просты.<br>\n          Нужно отличить рисунок&nbsp;от фотографии и сделать выбор.<br>\n          Задача кажется тривиальной, но не думай, что все так просто.<br>\n          Фотореализм обманчив и коварен.<br>\n          Помни, главное — смотреть очень внимательно.</p>\n      </div>\n      <div class=\"greeting__continue\"><span><img src=\"img/arrow_right.svg\" width=\"64\" height=\"64\" alt=\"Next\"></span></div>\n    </div>\n    ${new FooterView().template}`;\n  }\n\n  bind() {\n    const continueButton = this.element.querySelector(`.greeting__continue`);\n    continueButton.onclick = () => {\n      Application.showRules();\n    };\n  }\n\n  hide() {\n    this.element.children[0].style.opacity = `0`;\n  }\n\n  fadeIn() {\n    this.element.children[1].style.opacity = `1`;\n    this.element.children[1].classList.add(`fade--in`);\n  }\n\n  addElement(element) {\n    this.element.insertAdjacentElement(`afterbegin`, element);\n    this.element.children[0].style = `position: absolute; top: 0;`;\n  }\n\n  removeElement(element) {\n    element.remove();\n  }\n}\n\nexport default GreetingView;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\nimport Application from \"../application\";\nimport FooterView from \"./footer-view\";\n\nclass RulesView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <header class=\"header\">\n      <div class=\"header__back\">\n        <button class=\"back\">\n          <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n          <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n        </button>\n      </div>\n    </header>\n    <div class=\"rules\">\n      <h1 class=\"rules__title\">Правила</h1>\n      <p class=\"rules__description\">Угадай 10 раз для каждого изображения фото <img\n        src=\"img/photo_icon.png\" width=\"16\" height=\"16\"> или рисунок <img\n        src=\"img/paint_icon.png\" width=\"16\" height=\"16\" alt=\"\">.<br>\n        Фотографиями или рисунками могут быть оба изображения.<br>\n        На каждую попытку отводится 30 секунд.<br>\n        Ошибиться можно не более 3 раз.<br>\n        <br>\n        Готовы?\n      </p>\n      <form class=\"rules__form\">\n        <input class=\"rules__input\" type=\"text\" placeholder=\"Ваше Имя\">\n        <button class=\"rules__button  continue\" type=\"submit\" disabled>Go!</button>\n      </form>\n    </div>\n    ${new FooterView().template}`;\n  }\n\n  bind() {\n    const input = this.element.querySelector(`.rules__input`);\n    const button = this.element.querySelector(`.rules__button`);\n    const backButton = this.element.querySelector(`.back`);\n    const form = this.element.querySelector(`.rules__form`);\n    // имя не может состоять < чем из двух символов\n    input.oninput = () => {\n      button.disabled = input.value.length < constants.MIN_NAME_LENGTH;\n    };\n\n    button.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      Application.showGame(input.value);\n      form.reset();\n    });\n\n    backButton.addEventListener(`click`, () => {\n      Application.showGreeting();\n    });\n  }\n}\n\nexport default RulesView;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\n\nclass HeaderView extends AbstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n\n  get template() {\n    return `\n    <header class=\"header\">\n      <div class=\"header__back\">\n        <button class=\"back\">\n          <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n          <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n        </button>\n      </div>\n      <h1 class=\"game__timer\">${this.state.time}</h1>\n      <div class=\"game__lives\">\n        ${new Array(constants.INITIAL_STATE.lives - this.state.lives)\n      .fill(`<img src=\"img/heart__empty.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n        ${new Array(this.state.lives)\n      .fill(`<img src=\"img/heart__full.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n      </div>\n    </header>`;\n  }\n\n  bind() {\n    this.element.querySelector(`.back`).addEventListener(`click`, () => {\n      this.onButtonClick();\n      this.stopFlashing();\n    });\n\n    if (this.state.time <= constants.LAST_SEC) {\n      this.element.querySelector(`.game__timer`).classList.add(`flashing`);\n    }\n  }\n\n  onButtonClick() {\n  }\n\n  stopFlashing() {\n    this.element.querySelector(`.game__timer`).classList.remove(`flashing`);\n  }\n}\n\nexport default HeaderView;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\n\nclass GameFirstView extends AbstractView {\n  constructor(level) {\n    super();\n    this.question = level.question;\n    this.answers = level.answers;\n  }\n\n  get template() {\n    return `\n    <div class=\"game\">\n      <p class=\"game__task\">${this.question}</p>\n      <form class=\"game__content\">\n        <div class=\"game__option\">\n          <img src=\"${this.answers[0].image.url}\" alt=\"Option 1\" width=\"468\" height=\"458\">\n          <label class=\"game__answer game__answer--photo\">\n            <input name=\"question1\" type=\"radio\" value=\"photo\">\n            <span>Фото</span>\n          </label>\n          <label class=\"game__answer game__answer--paint\">\n            <input name=\"question1\" type=\"radio\" value=\"painting\">\n            <span>Рисунок</span>\n          </label>\n        </div>\n        <div class=\"game__option\">\n          <img src=\"${this.answers[1].image.url}\" alt=\"Option 2\" width=\"468\" height=\"458\">\n          <label class=\"game__answer  game__answer--photo\">\n            <input name=\"question2\" type=\"radio\" value=\"photo\">\n            <span>Фото</span>\n          </label>\n          <label class=\"game__answer  game__answer--paint\">\n            <input name=\"question2\" type=\"radio\" value=\"painting\">\n            <span>Рисунок</span>\n          </label>\n        </div>\n      </form>\n    </div>`;\n  }\n\n  onAnswer() {\n  }\n\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n    const radio = form.querySelectorAll(`[type=radio]`);\n\n    form.addEventListener(`change`, () => {\n      const checked = [];\n\n      for (const item of radio) {\n        // запись чекнутого элемента в массив\n        if (item.checked) {\n          checked.push(item);\n        }\n      }\n\n      if (checked.length === constants.CHECKED_RADIO_COUNT) {\n        const userAnswer = checked[0].value === this.answers[0].type && checked[1].value === this.answers[1].type;\n        this.onAnswer(userAnswer);\n        form.reset();\n      }\n    });\n  }\n}\n\nexport default GameFirstView;\n","import AbstractView from \"./abstract-view\";\n\nclass GameSecondView extends AbstractView {\n  constructor(level) {\n    super();\n    this.question = level.question;\n    this.answers = level.answers;\n  }\n\n  get template() {\n    return `\n    <div class=\"game\">\n      <p class=\"game__task\">${this.question}</p>\n      <form class=\"game__content  game__content--wide\">\n        <div class=\"game__option\">\n          <img src=\"${this.answers[0].image.url}\" alt=\"Option 1\" width=\"705\" height=\"455\">\n          <label class=\"game__answer  game__answer--photo\">\n            <input name=\"question1\" type=\"radio\" value=\"photo\">\n            <span>Фото</span>\n          </label>\n          <label class=\"game__answer  game__answer--wide  game__answer--paint\">\n            <input name=\"question1\" type=\"radio\" value=\"painting\">\n            <span>Рисунок</span>\n          </label>\n        </div>\n      </form>\n    </div>`;\n  }\n\n  onAnswer() {\n  }\n\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n\n    form.addEventListener(`change`, (evt) => {\n      const target = evt.target;\n      let answer;\n\n      if (target.tagName === `INPUT`) {\n        answer = target;\n        const userAnswer = answer.value === this.answers[0].type;\n        this.onAnswer(userAnswer);\n        form.reset();\n      }\n    });\n  }\n}\n\nexport default GameSecondView;\n","import AbstractView from \"./abstract-view\";\n\nclass GameThirdView extends AbstractView {\n  constructor(level) {\n    super();\n    this.question = level.question;\n    this.answers = level.answers;\n  }\n\n  get template() {\n    return `\n    <div class=\"game\">\n      <p class=\"game__task\">${this.question}</p>\n      <form class=\"game__content  game__content--triple\">\n        <div class=\"game__option\">\n          <img class=\"game__image\" src=\"${this.answers[0].image.url}\" alt=\"Option 1\" width=\"304\" height=\"455\">\n        </div>\n        <div class=\"game__option  game__option--selected\">\n          <img class=\"game__image\" src=\"${this.answers[1].image.url}\" alt=\"Option 1\" width=\"304\" height=\"455\">\n        </div>\n        <div class=\"game__option\">\n          <img class=\"game__image\" src=\"${this.answers[2].image.url}\" alt=\"Option 1\" width=\"304\" height=\"455\">\n        </div>\n      </form>\n    </div>`;\n  }\n\n  onAnswer() {\n  }\n\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n    const answer = this.question.includes(`фото`) ? `photo` : `painting`;\n    let answerUrl = ``;\n\n    for (let item of this.answers) {\n      if (item.type === answer) {\n        answerUrl = item.image.url;\n        break;\n      }\n    }\n\n    form.addEventListener(`click`, (evt) => {\n      let target = evt.target;\n      const userAnswer = target.children[0].src === answerUrl;\n      this.onAnswer(userAnswer);\n    });\n  }\n}\n\nexport default GameThirdView;\n","import AbstractView from \"./abstract-view\";\n\nclass ModalView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <div class=\"modal\">\n      <p class=\"modal__text\">Результаты текущей игры будут потеряны. <span>Выйти?</span></p>\n      <div class=\"modal__container\">\n        <button class=\"modal__button modal__yes\">Да</button>\n        <button class=\"modal__button modal__no\">Нет</button>\n      </div>\n    </div>`;\n  }\n\n  bind() {\n    this.element.querySelectorAll(`.modal__button`).forEach((elem) => {\n      elem.addEventListener(`click`, () => {\n        if (elem.classList.contains(`modal__yes`)) {\n          this.onExitClick();\n        } else {\n          this.onContinueClick();\n        }\n      });\n    });\n\n    this.element.style = `position: fixed; top: 0; left: 0; z-index: 1; width: 100%; height: 100vh; background-color: rgba(0, 0, 0, 0.2);`;\n  }\n\n  onExitClick() {\n  }\n\n  onContinueClick() {\n  }\n}\n\nexport default ModalView;\n","import HeaderView from \"../views/header-view\";\nimport Application from \"../application\";\nimport StatisticView from \"../views/statistic-view\";\nimport FooterView from \"../views/footer-view\";\nimport GameFirstView from \"../views/game-first-view\";\nimport GameSecondView from \"../views/game-second-view\";\nimport GameThirdView from \"../views/game-third-view\";\nimport ModalView from \"../views/modal-view\";\n\nconst getLevel = (game, model) => {\n  if (game === `two-of-two`) {\n    return new GameFirstView(model.getCurrentLevel());\n  }\n  if (game === `tinder-like`) {\n    return new GameSecondView(model.getCurrentLevel());\n  }\n  return new GameThirdView(model.getCurrentLevel());\n};\n\nclass GameScreen {\n  constructor(model) {\n    this.model = model;\n    this.header = this._getHeader();\n    this.content = this._getNeededView();\n    this.statistic = new StatisticView(this.model.state.answers);\n    this.footer = new FooterView();\n\n    this.root = document.createElement(`div`);\n    this.root.appendChild(this.header.element);\n    this.root.appendChild(this.content.element);\n    this.root.appendChild(this.statistic.element);\n    this.root.appendChild(this.footer.element);\n\n    this._interval = null;\n  }\n\n  get element() {\n    return this.root;\n  }\n\n  _getHeader() {\n    const header = new HeaderView(this.model.state);\n    header.onButtonClick = () => {\n      this._stopGame();\n      this.root.appendChild(this._getModal().element);\n    };\n\n    return header;\n  }\n\n  _getModal() {\n    const modal = new ModalView();\n    modal.onExitClick = () => {\n      Application.showGreeting();\n    };\n    modal.onContinueClick = () => {\n      this.root.lastChild.remove();\n      this._startTimer();\n    };\n    return modal;\n  }\n\n  _stopGame() {\n    clearInterval(this._interval);\n  }\n\n  _startTimer() {\n    this._interval = setInterval(() => {\n      this.model.tick();\n      if (this.model.state.time <= 0) {\n        this._stopGame();\n        this._userAnswer(false);\n      }\n      this._updateHeader();\n    }, 1000);\n  }\n\n  _getNeededView() {\n    const gameType = this.model.data[this.model.state.level].type;\n    return getLevel(gameType, this.model);\n  }\n\n  init() {\n    this._changeLevel();\n    this._startTimer();\n  }\n\n  _userAnswer(answer) {\n    this._stopGame();\n    this.model.addAnswer(answer);\n\n    if (!answer) {\n      this.model.die();\n    }\n\n    if (this.model.isDead() || !this.model.hasNextLevel()) {\n      if (!this.model.isDead()) {\n        this.model.win();\n      }\n      this._endGame();\n    } else {\n      this.model.nextLevel();\n      this.init();\n    }\n  }\n\n  _endGame() {\n    Application.showResults(this.model);\n    this.model.restart();\n  }\n\n  _updateHeader() {\n    const header = this._getHeader();\n    this.root.replaceChild(header.element, this.header.element);\n    this.header = header;\n  }\n\n  _updateStatistic() {\n    const statistic = new StatisticView(this.model.state.answers);\n    this.root.replaceChild(statistic.element, this.statistic.element);\n    this.statistic = statistic;\n  }\n\n  _changeLevel() {\n    this.model.rebootTime();\n    this._updateHeader();\n    this._updateStatistic();\n\n    const gameType = this.model.getCurrentLevel().type;\n    const level = getLevel(gameType, this.model);\n    level.onAnswer = this._userAnswer.bind(this);\n    this._changeContentView(level);\n  }\n\n  _changeContentView(view) {\n    this.root.replaceChild(view.element, this.content.element);\n    this.content = view;\n  }\n}\n\nexport default GameScreen;\n","const initialGame = {\n  lives: 3,\n  time: 30,\n  win: false,\n  level: 0\n};\n\nexport default initialGame;\n","import initialGame from \"./initial-game\";\nimport constants from \"../constants\";\n\nclass GameModel {\n  constructor(data, player) {\n    this.data = data;\n    this.player = player;\n    this.restart();\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  getLevel(index) {\n    return this.data[index];\n  }\n\n  getCurrentLevel() {\n    return this.getLevel(this._state.level);\n  }\n\n  hasNextLevel() {\n    return this.getLevel(this._state.level + 1) !== void 0;\n  }\n\n  nextLevel() {\n    this._state.level++;\n  }\n\n  die() {\n    this._state.lives--;\n  }\n\n  isDead() {\n    return this._state.lives <= 0;\n  }\n\n  win() {\n    this._state.win = true;\n  }\n\n  tick() {\n    this._state.time--;\n  }\n\n  addAnswer(answer) {\n    this._state.answers.push({correct: answer, time: initialGame.time - this._state.time});\n  }\n\n  restart() {\n    this._state = Object.assign({}, constants.INITIAL_STATE);\n    this._state.answers = [];\n  }\n\n  rebootTime() {\n    this._state.time = initialGame.time;\n  }\n}\n\nexport default GameModel;\n","import AbstractView from \"../views/abstract-view\";\n\nclass SplashScreen extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <div id=\"main\" class=\"central__content\">\n      <div id=\"intro\" class=\"intro\">\n        <h1 class=\"intro__asterisk load\">*</h1>\n        <p class=\"intro__motto\"><sup>*</sup> Это не фото. Это рисунок маслом нидерландского художника-фотореалиста Tjalf Sparnaay.</p>\n      </div>\n    </div>`;\n  }\n\n  fadeOut() {\n    this.element.classList.add(`fade--out`);\n  }\n}\n\nexport default SplashScreen;\n","import constants from \"./constants\";\n\nconst DEFAULT_NAME = `Неопознанный вомбат`;\nconst APP_ID = 13111983;\n\nconst checkStatus = (response) => {\n  if (response.ok) {\n    return response;\n  } else {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n};\n\nconst toJSON = (response) => response.json();\n\nexport default class Loader {\n  static async loadData() {\n    const response = await fetch(`${constants.SERVER_URL}/questions`);\n    checkStatus(response);\n    return await toJSON(response);\n  }\n\n  static async loadResults(name = DEFAULT_NAME) {\n    const response = await fetch(`${constants.SERVER_URL}/stats/${APP_ID}-${name}`);\n    checkStatus(response);\n    return await toJSON(response);\n  }\n\n  static async saveResults(data, name = DEFAULT_NAME) {\n    const requestSettings = {\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': `application/json`\n      },\n      method: `POST`\n    };\n    const response = await fetch(`${constants.SERVER_URL}/stats/${APP_ID}-${name}`, requestSettings);\n    return checkStatus(response);\n  }\n}\n\n","import GreetingView from \"./views/greeting-view\";\nimport RulesView from \"./views/rules-view\";\nimport GameScreen from \"./logic/game-screen\";\nimport GameModel from \"./logic/game-model\";\nimport SplashScreen from \"./splash/splash-screen\";\nimport {showErrorMessage} from \"./util\";\nimport Loader from \"./loader\";\nimport ManyResultsView from \"./views/many-results-view\";\nimport constants from \"./constants\";\n\nconst changeScreen = (domElement) => {\n  const screen = document.querySelector(`.central`);\n  screen.innerHTML = ``;\n  screen.appendChild(domElement);\n};\n\nlet gameData;\n\nconst pause = (time) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n\nclass Application {\n  static async start() {\n    const splash = new SplashScreen();\n    const greeting = new GreetingView();\n    greeting.hide();\n    greeting.addElement(splash.element);\n    changeScreen(greeting.element);\n    try {\n      gameData = await Loader.loadData();\n      greeting.fadeIn();\n      splash.fadeOut();\n      await pause(constants.PAUSE_TIME);\n      greeting.removeElement(splash.element);\n    } catch (e) {\n      showErrorMessage(e);\n    }\n  }\n\n  static showGreeting() {\n    const greeting = new GreetingView();\n    changeScreen(greeting.element);\n  }\n\n  static showRules() {\n    const rules = new RulesView();\n    changeScreen(rules.element);\n  }\n\n  static showGame(player) {\n    const game = new GameScreen(new GameModel(gameData, player));\n    changeScreen(game.element);\n    game.init();\n  }\n\n  static async showResults(model) {\n    const playerName = model.player;\n    try {\n      await Loader.saveResults(model.state, playerName);\n      const results = new ManyResultsView(await Loader.loadResults(playerName), playerName);\n      changeScreen(results.element);\n    } catch (e) {\n      showErrorMessage(e);\n    }\n  }\n}\n\nexport default Application;\n","import AbstractView from \"./abstract-view\";\nimport FooterView from \"./footer-view\";\nimport GameResultsView from \"./game-results-view\";\nimport Application from \"../application\";\nimport constants from \"../constants\";\n\nclass ManyResultsView extends AbstractView {\n  constructor(data) {\n    super();\n    this.data = data.reverse();\n    this.win = this.data[0].win;\n    this.results = [];\n\n    // выодить только три последних результата\n    for (let i = 0; i < Math.min(constants.MAX_RESULTS_NUMBER, this.data.length); i++) {\n      this.results.push(new GameResultsView(this.data[i], i + 1).template);\n    }\n  }\n\n  get template() {\n    return `\n    <header class=\"header\">\n      <div class=\"header__back\">\n        <button class=\"back\">\n          <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n          <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n        </button>\n      </div>\n    </header>\n    <div class=\"result\">\n      <h1>${this.win === true ? `Победа! 💁‍♂️` : `Поражение! 🤦‍`}</h1>\n      ${this.results}\n    </div>\n    ${new FooterView().template}`;\n  }\n\n  bind() {\n    const backButton = this.element.querySelector(`.back`);\n\n    backButton.onclick = () => {\n      Application.showGreeting();\n    };\n  }\n}\n\nexport default ManyResultsView;\n"],"names":["getElementFromTemplate","markup","domElement","document","createElement","innerHTML","showErrorMessage","message","template","textContent","styles","style","cssText","join","body","appendChild","AbstractView","new","target","Error","_element","render","bind","FooterView","constants","Object","freeze","getAnswerType","answer","correct","time","LOWER_TIME_LIMIT","HIGHER_TIME_LIMIT","StatisticView","answers","answersType","map","answerType","Array","length","fill","getAnswersQuantity","state","correctAnswers","filter","slowAnswers","fastAnswers","lives","countPoints","CORRECT_ANSWER","fast","ADDITIONAL_POINTS","slow","GameResultsView","index","win","statsview","answerResult","totalResult","GreetingView","continueButton","element","querySelector","onclick","showRules","children","opacity","classList","add","insertAdjacentElement","remove","RulesView","input","button","backButton","form","oninput","disabled","value","MIN_NAME_LENGTH","addEventListener","evt","preventDefault","showGame","reset","showGreeting","HeaderView","onButtonClick","stopFlashing","LAST_SEC","INITIAL_STATE","GameFirstView","level","question","radio","querySelectorAll","checked","item","push","CHECKED_RADIO_COUNT","userAnswer","type","onAnswer","image","url","GameSecondView","tagName","GameThirdView","includes","answerUrl","src","ModalView","forEach","elem","contains","onExitClick","onContinueClick","getLevel","game","model","getCurrentLevel","GameScreen","header","_getHeader","content","_getNeededView","statistic","footer","root","_interval","_stopGame","_getModal","modal","lastChild","_startTimer","setInterval","tick","_userAnswer","_updateHeader","gameType","data","_changeLevel","addAnswer","die","isDead","hasNextLevel","_endGame","nextLevel","init","showResults","restart","replaceChild","rebootTime","_updateStatistic","_changeContentView","view","initialGame","GameModel","player","_state","assign","SplashScreen","DEFAULT_NAME","APP_ID","checkStatus","response","ok","status","statusText","toJSON","json","Loader","fetch","SERVER_URL","name","JSON","stringify","requestSettings","changeScreen","screen","gameData","pause","Promise","resolve","Application","hide","addElement","splash","greeting","loadData","fadeIn","fadeOut","PAUSE_TIME","removeElement","rules","saveResults","playerName","ManyResultsView","loadResults","results","reverse","i","Math","min","MAX_RESULTS_NUMBER"],"mappings":"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"}