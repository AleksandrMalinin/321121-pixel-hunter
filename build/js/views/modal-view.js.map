{"version":3,"file":"modal-view.js","sources":["../util.js","abstract-view.js","modal-view.js"],"sourcesContent":["export const getElementFromTemplate = (markup) => {\n  let domElement = document.createElement(`div`);\n  domElement.innerHTML = markup;\n  return domElement;\n};\n\nexport const showErrorMessage = (message) => {\n  const template = document.createElement(`div`);\n  template.textContent = message;\n\n  const styles = [\n    `position: fixed`,\n    `top: 25%`,\n    `left: 50%`,\n    `z-index: 100`,\n    `width: 800px`,\n    `padding: 20px`,\n    `color: #fff`,\n    `text-align: center`,\n    `transform: translate(-50%, -50%)`,\n    `border-radius: 2px`,\n    `background-color: #DC143C`\n  ];\n\n  template.style.cssText = styles.join(`;`);\n  document.body.appendChild(template);\n};\n","import {getElementFromTemplate} from \"../util\";\n\nclass AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can not create example of AbstractView, only the new one class`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return getElementFromTemplate(this.template);\n  }\n\n  bind() {\n  }\n}\n\nexport default AbstractView;\n","import AbstractView from \"./abstract-view\";\n\nclass ModalView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n    <div class=\"modal\">\n      <p class=\"modal__text\">Результаты текущей игры будут потеряны. <span>Выйти?</span></p>\n      <div class=\"modal__container\">\n        <button class=\"modal__button modal__yes\">Да</button>\n        <button class=\"modal__button modal__no\">Нет</button>\n      </div>\n    </div>`;\n  }\n\n  bind() {\n    this.element.querySelectorAll(`.modal__button`).forEach((elem) => {\n      elem.addEventListener(`click`, () => {\n        if (elem.classList.contains(`modal__yes`)) {\n          this.onExitClick();\n        } else {\n          this.onContinueClick();\n        }\n      });\n    });\n\n    this.element.style = `position: fixed; top: 0; left: 0; z-index: 1; width: 100%; height: 100vh; background-color: rgba(0, 0, 0, 0.2);`;\n  }\n\n  onExitClick() {\n  }\n\n  onContinueClick() {\n  }\n}\n\nexport default ModalView;\n"],"names":["getElementFromTemplate","markup","domElement","document","createElement","innerHTML","AbstractView","new","target","Error","template","_element","render","bind","ModalView","element","querySelectorAll","forEach","elem","addEventListener","classList","contains","onExitClick","onContinueClick","style"],"mappings":";;;AAAO,IAAMA,yBAAyB,SAAzBA,sBAAyB,CAACC,MAAD,EAAY;MAC5CC,aAAaC,SAASC,aAAT,OAAjB;aACWC,SAAX,GAAuBJ,MAAvB;SACOC,UAAP;CAHK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICEDI;0BACU;;;QACRC,IAAIC,MAAJ,KAAeF,YAAnB,EAAiC;YACzB,IAAIG,KAAJ,kEAAN;;;;;;6BAiBK;aACAT,uBAAuB,KAAKU,QAA5B,CAAP;;;;2BAGK;;;2BAjBQ;YACP,IAAID,KAAJ,wBAAN;;;;2BAGY;UACR,KAAKE,QAAT,EAAmB;eACV,KAAKA,QAAZ;;WAEGA,QAAL,GAAgB,KAAKC,MAAL,EAAhB;WACKC,IAAL,CAAU,KAAKF,QAAf;aACO,KAAKA,QAAZ;;;;;;ICjBEG;;;uBACU;;;;;;;2BAeP;;;WACAC,OAAL,CAAaC,gBAAb,mBAAgDC,OAAhD,CAAwD,UAACC,IAAD,EAAU;aAC3DC,gBAAL,UAA+B,YAAM;cAC/BD,KAAKE,SAAL,CAAeC,QAAf,cAAJ,EAA2C;mBACpCC,WAAL;WADF,MAEO;mBACAC,eAAL;;SAJJ;OADF;;WAUKR,OAAL,CAAaS,KAAb;;;;kCAGY;;;sCAGI;;;2BA5BH;;;;;EALOlB;;;;;;;;"}