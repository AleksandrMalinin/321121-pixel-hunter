{"version":3,"file":"game-results-view.js","sources":["../util.js","abstract-view.js","../constants.js","statistic-view.js","../logic/game-statistic.js","game-results-view.js"],"sourcesContent":["export const getElementFromTemplate = (markup) => {\n  let domElement = document.createElement(`div`);\n  domElement.innerHTML = markup;\n  return domElement;\n};\n\nexport const showErrorMessage = (message) => {\n  const template = document.createElement(`div`);\n  template.textContent = message;\n\n  const styles = [\n    `position: fixed`,\n    `top: 25%`,\n    `left: 50%`,\n    `z-index: 100`,\n    `width: 800px`,\n    `padding: 20px`,\n    `color: #fff`,\n    `text-align: center`,\n    `transform: translate(-50%, -50%)`,\n    `border-radius: 2px`,\n    `background-color: #DC143C`\n  ];\n\n  template.style.cssText = styles.join(`;`);\n  document.body.appendChild(template);\n};\n","import {getElementFromTemplate} from \"../util\";\n\nclass AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can not create example of AbstractView, only the new one class`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return getElementFromTemplate(this.template);\n  }\n\n  bind() {\n  }\n}\n\nexport default AbstractView;\n","const constants = {\n  MAX_ANSWERS_COUNT: 10,\n  MAX_WRONG_ANSWERS: 3,\n  CORRECT_ANSWER: 100,\n  ADDITIONAL_POINTS: 50,\n  LOWER_TIME_LIMIT: 10,\n  HIGHER_TIME_LIMIT: 20,\n  CHECKED_RADIO_COUNT: 2,\n  MIN_NAME_LENGTH: 2,\n  INITIAL_STATE: Object.freeze({\n    lives: 3,\n    time: 30,\n    win: false,\n    level: 0\n  }),\n  SERVER_URL: `https://es.dump.academy/pixel-hunter`,\n  MAX_RESULTS_NUMBER: 3,\n  LAST_SEC: 5,\n  PAUSE_TIME: 3000\n};\n\nexport default constants;\n","import AbstractView from \"./abstract-view\";\nimport constants from \"../constants\";\n\nconst getAnswerType = (answer) => {\n  if (!answer.correct) {\n    return `wrong`;\n  }\n\n  if (answer.correct && answer.time < constants.LOWER_TIME_LIMIT) {\n    return `fast`;\n  }\n\n  if (answer.correct && answer.time > constants.HIGHER_TIME_LIMIT) {\n    return `slow`;\n  }\n\n  return `correct`;\n};\n\nclass StatisticView extends AbstractView {\n  constructor(answers) {\n    super();\n    this.answers = answers;\n    this.answersType = this.answers.map((answer) => getAnswerType(answer));\n  }\n\n  get template() {\n    return `\n    <div class=\"stats\">\n      <ul class=\"stats\">\n      ${this.answersType.map((answerType) => `<li class=\"stats__result stats__result--${answerType}\"></li>`)\n      .join(``)}\n      ${new Array(10 - this.answersType.length)\n      .fill(`<li class=\"stats__result stats__result--unknown\"></li>`)\n      .join(``)}\n      </ul>\n    </div>`;\n  }\n}\n\nexport default StatisticView;\n","import constants from \"../constants\";\n\nexport const getAnswersQuantity = (state) => {\n  const correctAnswers = state.answers.filter((answer) => {\n    return answer.correct;\n  });\n\n  const slowAnswers = state.answers.filter((answer) => {\n    return answer.time > constants.HIGHER_TIME_LIMIT && answer.correct;\n  });\n\n  const fastAnswers = state.answers.filter((answer) => {\n    return answer.time < constants.LOWER_TIME_LIMIT && answer.correct;\n  });\n\n  return {\n    correct: correctAnswers.length,\n    slow: slowAnswers.length,\n    fast: fastAnswers.length,\n    lives: state.lives\n  };\n};\n\nexport const countPoints = (answers) => {\n  return answers.correct * constants.CORRECT_ANSWER + answers.fast * constants.ADDITIONAL_POINTS + answers.slow * -constants.ADDITIONAL_POINTS + answers.lives * constants.ADDITIONAL_POINTS;\n};\n","import AbstractView from \"./abstract-view\";\nimport StatisticView from \"./statistic-view\";\nimport {countPoints, getAnswersQuantity} from \"../logic/game-statistic\";\nimport constants from \"../constants\";\n\nclass GameResultsView extends AbstractView {\n  constructor(state, index) {\n    super();\n    this.index = index;\n    this.state = state;\n    this.answers = this.state.answers;\n    this.win = this.state.win;\n    this.statsview = new StatisticView(this.answers).template;\n    this.answerResult = getAnswersQuantity(state);\n    this.totalResult = countPoints(this.answerResult);\n  }\n\n  get template() {\n    return `\n          <table class=\"result__table\">\n        <tr>\n          <td class=\"result__number\">${this.index}.</td>\n          <td colspan=\"2\">\n            ${this.statsview}\n          </td>\n          <td class=\"result__points\">×&nbsp;100</td>\n          <td class=\"result__total\">${this.answerResult.correct * constants.CORRECT_ANSWER}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за скорость:</td>\n          <td class=\"result__extra\">${this.answerResult.fast}&nbsp;<span class=\"stats__result stats__result--fast\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.fast * constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за жизни:</td>\n          <td class=\"result__extra\">${this.answerResult.lives}&nbsp;<span class=\"stats__result stats__result--alive\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.lives * constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Штраф за медлительность:</td>\n          <td class=\"result__extra\">${this.answerResult.slow}&nbsp;<span class=\"stats__result stats__result--slow\"></span></td>\n          <td class=\"result__points\">×&nbsp;50</td>\n          <td class=\"result__total\">${this.answerResult.slow * -constants.ADDITIONAL_POINTS}</td>\n        </tr>\n        <tr>\n          <td colspan=\"5\" class=\"result__total  result__total--final\">${this.totalResult}</td>\n        </tr>\n      </table>`;\n  }\n}\n\nexport default GameResultsView;\n"],"names":["getElementFromTemplate","markup","domElement","document","createElement","innerHTML","AbstractView","new","target","Error","template","_element","render","bind","constants","Object","freeze","getAnswerType","answer","correct","time","LOWER_TIME_LIMIT","HIGHER_TIME_LIMIT","StatisticView","answers","answersType","map","answerType","join","Array","length","fill","getAnswersQuantity","state","correctAnswers","filter","slowAnswers","fastAnswers","lives","countPoints","CORRECT_ANSWER","fast","ADDITIONAL_POINTS","slow","GameResultsView","index","win","statsview","answerResult","totalResult"],"mappings":"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"}